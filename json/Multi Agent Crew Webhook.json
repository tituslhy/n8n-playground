{
  "name": "Multi Agent Crew",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! ðŸ‘‹",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        272,
        -496
      ],
      "id": "a97eea71-a86a-4abb-a082-7ee8be87f900",
      "name": "When chat message received",
      "webhookId": "e3c6f4f6-a372-40d3-a6a3-a48dc06cdde4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4d26ebfa-abb5-4f00-a044-abe23ddfe494",
              "leftValue": "={{ $json.output }}",
              "rightValue": "=safe",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        560,
        0
      ],
      "id": "0d1b4776-febd-4e79-a968-d9370aab9c93",
      "name": "If"
    },
    {
      "parameters": {
        "model": "llama-guard3:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        176,
        176
      ],
      "id": "1a643451-c5df-4451-8388-0a6b1e27443e",
      "name": "Llama Guard",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        352,
        -320
      ],
      "id": "7fd197e5-a08e-4e49-adb4-28b5418b8fb4",
      "name": "Gatekeeper Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "n8n test"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        352,
        192
      ],
      "id": "ce350c9d-e657-462c-b414-08cf44df40ee",
      "name": "Crew Memory"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "n8n test"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1600,
        -608
      ],
      "id": "1ea2a5f2-d101-4d8b-b3dd-59676eecb597",
      "name": "Crew Memory1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.chatInput }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "You are the manager agent overseeing a group of agents. Assign all questions relating to the weather to the weather forecasting agent, all questions relating to currency exchanges to the forex exchange agent and all questions relating to scheduling to the google calendar agent. For all other queries, assign it to the secretary agent. For every message that you receive, determine which agent/s to assign the task to."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        768,
        -176
      ],
      "id": "0b6057e0-87a8-4697-bea6-18bf579a57f6",
      "name": "Manager Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"assigned_agents\": [\"Google Calendar Agent\", \"Forex Agent\", \"Weather Forecast Agent\", \"Secretary Agent\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        960,
        -16
      ],
      "id": "e0dacf55-e196-467a-a510-88ecd2ac73e4",
      "name": "Manager Output Parser"
    },
    {
      "parameters": {
        "model": "qwen2.5:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        784,
        -16
      ],
      "id": "b29f9c19-0108-4091-93bb-2b74c26f2f6a",
      "name": "Qwen2.5 7bn",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.chatInput }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1616,
        -416
      ],
      "id": "10795f4f-9769-40c9-93da-4041c4323564",
      "name": "Weather Forecasting Agent",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.assigned_agents",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1136,
        -192
      ],
      "id": "bd19d6e4-bbe5-463a-be86-2ca439daa4b9",
      "name": "Split Out"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json['output.assigned_agents'] }}",
                    "rightValue": "weather",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "a4f8f303-5ed1-440d-a736-d0d536c41269"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7aadd613-a569-418a-9d3c-d8106f87cb4d",
                    "leftValue": "={{ $json['output.assigned_agents'] }}",
                    "rightValue": "forex",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a8452efd-cf4a-4a97-83f0-20ba4bea84a7",
                    "leftValue": "={{ $json['output.assigned_agents'] }}",
                    "rightValue": "google",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "792d9742-8165-4f90-8ced-851b6792650b",
                    "leftValue": "={{ $json['output.assigned_agents'] }}",
                    "rightValue": "secretary",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1344,
        -192
      ],
      "id": "2b766f4b-7a28-4675-8038-0ae7866d59ff",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "07b92d29-1490-43a3-8e73-ae5925753dca",
              "name": "responseText",
              "value": "You have asked an unsafe query",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        848,
        208
      ],
      "id": "16ce63b8-554a-4d95-9551-8a334eeff814",
      "name": "Default reply for dangerous queries"
    },
    {
      "parameters": {
        "model": "qwen2.5:latest",
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1456,
        -480
      ],
      "id": "adb915dc-2095-4137-bc74-8ee765f1cdb1",
      "name": "Qwen 2.5 7bn",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "n8n test"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1760,
        -16
      ],
      "id": "7a38530c-bb38-46e8-94ed-e923d5dec55a",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a helpful assistant specializing in getting the latest currency exchange rates. Always use a tool to answer the user's question.\n\nHere's the user's question:\n{{ $('Webhook').item.json.body.chatInput }}\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1664,
        -208
      ],
      "id": "f7b33b31-bb51-4872-a180-fca07de8111f",
      "name": "Forex Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.chatInput }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        1616,
        128
      ],
      "id": "576aeea7-bc63-4a2a-a8ab-8b149eb4a590",
      "name": "Google Calendar Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "test n8n"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1712,
        304
      ],
      "id": "33875fe0-0970-4b5b-864c-f4277b9230f7",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "description": "Call this tool to get Google calendar events or update the user's Google calendar",
        "workflowId": {
          "__rl": true,
          "value": "B6havqgpOkOAtj6V",
          "mode": "list",
          "cachedResultName": "Google Calendar Agent"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1872,
        400
      ],
      "id": "dbb5d14c-933d-4023-80cc-92d42f758e71",
      "name": "Call Google Calendar Agent Workflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.chatInput }}",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1264,
        432
      ],
      "id": "f7ec1be0-0708-4cd6-ae74-cb26dabe4c3d",
      "name": "Secretary Agent"
    },
    {
      "parameters": {
        "model": "qwen3:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1376,
        240
      ],
      "id": "c0801bff-7cae-428f-8f78-39531ffb25a1",
      "name": "Qwen3 8bn",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "model": "qwen2.5:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1568,
        288
      ],
      "id": "b25693c0-2409-48be-b24d-0df36013edae",
      "name": "Qwen2.5 7bn1",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "content": "## Start by saying 'hi'\n![Button](https://i.imgur.com/PrIBJI6.png)",
        "height": 149,
        "width": 150
      },
      "id": "6a7573db-c27d-4984-b763-631892f48925",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        48,
        -512
      ]
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2160,
        32
      ],
      "id": "87a8d190-4ba6-4ccb-b35b-aa76f7f4e7a4",
      "name": "Merge"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# 1. Convert all input items to Python-native dicts\ninput_items = _input.all().to_py()\n\n# 2. Extract your desired field value (\"output\" in this example), making sure it's a string\ntexts = [str(itm[\"json\"][\"output\"]) for itm in input_items]\n\n# 3. Concatenate with double newlines (or your preferred separator)\nfull_text = \"\\n\\n\".join(texts)\n\n# 4. Return a list with a single item wrapping your string\nreturn [{\"json\": {\"fullText\": full_text}}]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2272,
        -208
      ],
      "id": "c52b9929-0fd9-4010-bb8a-038838b3a151",
      "name": "Code"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fa775759-72b9-4569-955e-00705c21d042",
              "name": "fullText",
              "value": "={{ $json.fullText }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2416,
        -368
      ],
      "id": "2ef05746-02f7-4310-bce9-9cdeca55ec72",
      "name": "json_to_string"
    },
    {
      "parameters": {
        "description": "Call this tool for questions relating to the weather",
        "language": "python",
        "pythonCode": "# Example: convert the incoming query to uppercase and return it\nreturn f\"The weather is sunny in {query}\""
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.3,
      "position": [
        1760,
        -592
      ],
      "id": "ee02085c-5498-4aca-a74b-24cb4f5a7232",
      "name": "Get Weather in City"
    },
    {
      "parameters": {
        "sseEndpoint": "http://host.docker.internal:3000/sse"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        1904,
        -32
      ],
      "id": "a6dd9350-0f3d-4cdf-99d2-be5f96a2c4a7",
      "name": "Get exchange rate tool"
    },
    {
      "parameters": {
        "model": "qwen2.5:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1600,
        -48
      ],
      "id": "96a9c7cb-e052-4aa7-858c-f2ecbb3ac6a1",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "model": "qwen2.5:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        2432,
        112
      ],
      "id": "7a0fac14-2f40-4a1a-9f05-bbff59ba8962",
      "name": "Qwen 2.5",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=This is the user's question:\n{{ $('Webhook').item.json.body.chatInput }}\n\nThis are the answers from the agents: {{ $json.fullText }}\n\nSummarize the outputs from the agents to answer the user's question.",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        2464,
        -80
      ],
      "id": "5745e7fe-9f1a-4849-a5d8-fb07f4a8528f",
      "name": "Consolidate Answers"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "n8n",
        "responseMode": "lastNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        144,
        -320
      ],
      "id": "bded0571-a4e6-4fb7-8a0b-73e574ad2a1d",
      "name": "Webhook",
      "webhookId": "037ac728-09af-444c-9b6d-90a250f40237"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        []
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Manager Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Default reply for dangerous queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Llama Guard": {
      "ai_languageModel": [
        [
          {
            "node": "Gatekeeper Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gatekeeper Agent": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crew Memory": {
      "ai_memory": [
        [
          {
            "node": "Gatekeeper Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Crew Memory1": {
      "ai_memory": [
        [
          {
            "node": "Weather Forecasting Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Manager Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Qwen2.5 7bn": {
      "ai_languageModel": [
        [
          {
            "node": "Manager Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Manager Agent": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Weather Forecasting Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Forex Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Calendar Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Secretary Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qwen 2.5 7bn": {
      "ai_languageModel": [
        [
          {
            "node": "Weather Forecasting Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Forex Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Google Calendar Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Call Google Calendar Agent Workflow": {
      "ai_tool": [
        [
          {
            "node": "Google Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Qwen3 8bn": {
      "ai_languageModel": [
        [
          {
            "node": "Secretary Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Qwen2.5 7bn1": {
      "ai_languageModel": [
        [
          {
            "node": "Google Calendar Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Weather Forecasting Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Forex Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Google Calendar Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Secretary Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "json_to_string",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "json_to_string": {
      "main": [
        [
          {
            "node": "Consolidate Answers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Weather in City": {
      "ai_tool": [
        [
          {
            "node": "Weather Forecasting Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get exchange rate tool": {
      "ai_tool": [
        [
          {
            "node": "Forex Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Forex Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Qwen 2.5": {
      "ai_languageModel": [
        [
          {
            "node": "Consolidate Answers",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Gatekeeper Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "71f0f99d-5e97-45a1-b918-6f7116e63ee0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "fkh67MeUPBuGG2re",
  "tags": []
}